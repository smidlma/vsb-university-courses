# Uloha 1
# a
pbinom(0,20,0.15,F)
20*0.15
pnbinom(6,1,0.15)
plot(x,y)
x = seq(0,2400,0.01)
y = pexp(x, 1/800)
plot(x,y)
x = seq(0,4800,0.01)
y = pexp(x, 1/800)
plot(x,y)
x = seq(0,4800,0.01)
y = pexp(x, 1/800)
plot(x,y)
x = seq(0,3600,0.01)
y = pexp(x, 1/800)
plot(x,y)
x = seq(0,3600,0.01)
y = pexp(x, 1/800)
plot(x,y)
x = seq(0,3600,0.01)
y = pexp(x, 1/800)
plot(x,y)
x = seq(0,2400,0.01)
y = pexp(x, 1/800)
plot(x,y)
x = seq(0,2400,0.01)
y = pexp(x, 1/30)
plot(x,y)
x = seq(0,2400,0.01)
y = pexp(x, 1/30)
plot(x,y)
x = seq(0,2400,0.01)
y = pexp(x, 1/800)
plot(x,y)
2^2
2^3
sqrt(1/800^2)
1/(1/800^2)
sqrt(1/(1/800^2))
x = seq(0, 800 + 3*800, 0.01)
y = dexp(x,1/800)
plot(x,y)
x = seq(0 - 3*800, 800 + 3*800, 0.01)
y = dexp(x,1/800)
plot(x,y)
x = seq(0, 800 + 3*800, 0.01)
y = dexp(x,1/800)
plot(x,y)
x = seq(0, 24 + 3*24, 0.01)
y = dexp(x,1/24)
plot(x,y)
x = seq(0, 12 + 3*12, 0.01)
y = dexp(x,1/12)
plot(x,y)
x = seq(800, 800 + 3*800, 0.1)
y = dexp(x,1/800)
plot(x,y)
x = seq(800, 800 + 3*800, 0.01)
y = dexp(x,1/800)
plot(x,y)
x = seq(0,2400,0.01)
y = pexp(x, 1/800)
plot(x,y)
x = seq(0, 800 + 3*800, 0.01)
y = dexp(x,1/800)
plot(x,y)
x = seq(0,2400,0.01)
y = pexp(x, 1/800)
plot(x,y)
x = seq(0,2400,0.01)
y = pexp(x, 1/800)
plot(x,y)
y = dexp(x,1/800)
plot(x,y)
x = seq(-2400,2400,0.01)
y = dexp(x,1/800)
plot(x,y)
x = seq(0,2400,0.01)
y = pexp(x, 1/800)
plot(x,y)
y = dexp(x,1/800)
plot(x,y)
pexp(900, 1/800, F)
qexp(0.75,1/800)
pnbinom(6,1,0.15,F)
pnbinom(6,1,0.15,F)
pnbinom(6,1,0.15, lower.tail = F)
1 - pnbinom(7,1,0.15)
1 - pnbinom(6,1,0.15)
x = seq(0,6000,0.01)
y = pexp(x, 1/800)
plot(x,y)
sqrt(1/((1/800^)2))
(1/800)^2
sqrt(1/a)
a = (1/800)^2
sqrt(1/a)
x = seq(0,2400,0.01)
y = pexp(x, 1/800)
plot(x,y)
x = seq(0,800+2400,0.01)
y = pexp(x, 1/800)
plot(x,y)
x = seq(0,6000,0.01)
y = pexp(x, 1/800)
plot(x,y)
qexp(0.75,1/800)
library(readxl)
library(dplyr)
library(ggplot2)
library(moments)
library(rstatix)
data = read_excel("data_hraci.xlsx")
setwd("~/University/ing/ps/statistics")
data = read_excel("data_hraci.xlsx")
# Vyfiltrování těch záznamů, potřebných k tomuto příkladu - pouze záznamy o hráčích s Linux.
data1 = data %>%
filter(system == "Linux")
#* a) ####
# Odlehlá pozorování a analýza předpokladů (normalita)
boxplot(data1$odehrane_hod_2018) # krabicový graf
hist(data1$odehrane_hod_2018)  # histogram
qqnorm(data1$odehrane_hod_2018)  # QQ-graf
qqline(data1$odehrane_hod_2018)
#* a) ####
# Odlehlá pozorování a analýza předpokladů (normalita)
boxplot(data1$odehrane_hod_2018) # krabicový graf
data1 %>%
identify_outliers(odehrane_hod_2018)  # identifikace odl. pozorování
hist(data1$odehrane_hod_2018)  # histogram
qqnorm(data1$odehrane_hod_2018)  # QQ-graf
qqline(data1$odehrane_hod_2018)
moments::skewness(data1$odehrane_hod_2018)   # šikmost
moments::kurtosis(data1$odehrane_hod_2018)-3 # standardizovaná špičatost
# Rozsah výběru a sm. odchylka kvůli zaokrouhlení
length(na.omit(data1$odehrane_hod_2018))
sd(data1$odehrane_hod_2018)
# Bodový a 90% oboustranný intervalový odhad střední hodnoty (normalita OK)
mean(data1$odehrane_hod_2018)
t.test(data1$odehrane_hod_2018, alternative = "two.sided", conf.level = 0.9)
# Bodový a 90% oboustranný intervalový odhad střední hodnoty (normalita OK)
mean(data1$odehrane_hod_2018)
t.test(data1$odehrane_hod_2018, alternative = "two.sided", conf.level = 0.9)
# Bodový a 90% levostranný intervalový odhad střední hodnoty (normalita OK)
mean(data1$odehrane_hod_2018)
t.test(data1$odehrane_hod_2018, alternative = "greater", conf.level = 0.9)
# Bodový a 90% pravostranný intervalový odhad střední hodnoty (normalita OK)
mean(data1$odehrane_hod_2018)
t.test(data1$odehrane_hod_2018, alternative = "less", conf.level = 0.9)
# Bodový a 90% oboustranný intervalový odhad směrodatné odchylky (normalita OK)
sd(data1$odehrane_hod_2018)
library(EnvStats)
Int_odhad = varTest(data1$odehrane_hod_2018, alternative = "two.sided", conf.level = 0.9)
# Odmocnění pro získání int. odhadu sm. odchylky (funkce dá int. odhad rozptylu)
sqrt(Int_odhad$conf.int)
#* e) ####
# Definování dichotomické proměnné
data1$hodiny_dich_2018 = ifelse(data1$odehrane_hod_2018>280, "Ano", "Ne")
# Získání potřebných četností
table(data1$hodiny_dich_2018)
n = 42+16
x = 42
p = x/n
# Ověření předpokladů
n > 9/(p*(1-p))
# Bodový a 90% oboustranný intervalový odhad pravděpodobnosti
p
binom.test(x, n, alternative = "two.sided", conf.level = 0.9)
# Vyfiltrování těch záznamů, potřebných k tomuto příkladu - potřebujeme vše.
data2 = data
# Odlehlá pozorování a jejich odstranění
boxplot(data2$odehrane_hod_2019 ~ data2$system)
outliers =
data2 %>%
group_by(system) %>%
identify_outliers(odehrane_hod_2019)
outliers
data2 =
data2 %>%
mutate(odehrane_hod_2019_out = ifelse(IDhrace %in% outliers$IDhrace,
NA,
odehrane_hod_2019))
# Analýza předpokladů (normalita pro každý OS)
boxplot(data2$odehrane_hod_2019_out ~ data2$system)
# sada histogramů
ggplot(data2,
aes(x = odehrane_hod_2019_out))+
geom_histogram(bins = 10)+
facet_wrap("system")
# sada histogramů
ggplot(data2,
aes(x = odehrane_hod_2019_out))+
geom_histogram(bins = 10)+
facet_wrap("system", dir = "v")
# sada QQ-grafů
ggplot(data2,
aes(sample = odehrane_hod_2019_out))+
stat_qq()+
stat_qq_line()+
facet_wrap("system", scales = "free")
# Šikmost, špičatost
# + rozsahy výběrů a sm. odchylky kvůli zaokrouhlení pro každý OS
data2 %>%
group_by(system) %>%
summarise(sikmost = moments::skewness(odehrane_hod_2019_out, na.rm = T),
spicatost = moments::kurtosis(odehrane_hod_2019_out, na.rm = T)-3,
rozsahy = length(na.omit(odehrane_hod_2019_out)),
sm_odch = sd(odehrane_hod_2019_out, na.rm = T))
# Šikmost, špičatost
# + rozsahy výběrů a sm. odchylky kvůli zaokrouhlení pro každý OS
data2 %>%
group_by(system) %>%
summarise(sikmost = moments::skewness(odehrane_hod_2019_out, na.rm = T),
spicatost = moments::kurtosis(odehrane_hod_2019_out, na.rm = T)-3,
rozsahy = length(na.omit(odehrane_hod_2019_out)),
sm_odch = sd(odehrane_hod_2019_out, na.rm = T), median = quantile(odehrane_hod_2019_out, 0.5, na.rm =T))
# Bodový a 95% oboustranný intervalový odhad mediánu pro každý operační systém (1x normalita OK, 2x normalita KO)
tapply(data2$odehrane_hod_2019_out,
data2$system,
quantile,
probs = 0.5,
na.rm =T)
tapply(data2$odehrane_hod_2019_out,
data2$system,
wilcox.test,
alternative = "two.sided",
conf.level = 0.95,
conf.int = TRUE)
